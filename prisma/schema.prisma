// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator nestjsDto {
  provider                        = "prisma-generator-nestjs-dto"
  output                          = "../src/generated/nestjs-dto"
  outputToNestJsResourceStructure = "false"
  exportRelationModifierClasses   = "true"
  reExport                        = "false"
  createDtoPrefix                 = "Create"
  updateDtoPrefix                 = "Update"
  dtoSuffix                       = "Dto"
  entityPrefix                    = ""
  entitySuffix                    = ""
  fileNamingStyle                 = "camel"
}

model Game {
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  startedOn    DateTime?
  endedOn      DateTime?
  id           Int              @id @default(autoincrement())
  title        String           @unique @db.VarChar(255)
  description  String
  picturesUrls String[]
  players      PlayersOnGames[]
}

model Player {
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt
  joinedOn   DateTime         @default(now())
  id         Int              @id @default(autoincrement())
  email      String           @unique
  firstName  String           @db.VarChar(255)
  lastName   String           @db.VarChar(255)
  middleName String?          @db.VarChar(255)
  bornDate   DateTime
  activated  Boolean?         @default(false)
  credits    Decimal          @default(0) @db.Money
  games      PlayersOnGames[]
}

model PlayersOnGames {
  game       Game     @relation(fields: [gameId], references: [id])
  gameId     Int // relation scalar field (used in the `@relation` attribute above)
  player     Player   @relation(fields: [playerId], references: [id])
  playerId   Int // relation scalar field (used in the `@relation` attribute above)
  assignedAt DateTime @default(now())

  @@id([gameId, playerId])
}
